<?php
/**
 * ExtIntLinnworks
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Shipping Label API
 *
 * Shipping Label application
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.51
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ExtIntLinnworks Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ExtIntLinnworks implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ExtIntLinnworks';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'linnworks_unique_identifier' => 'string',
        'email' => 'string',
        'account_name' => 'string',
        'vat_number' => 'string',
        'eori_number' => 'string',
        'ioss_number' => 'string',
        'default_weight' => 'double',
        'default_length' => 'double',
        'default_width' => 'double',
        'default_height' => 'double',
        'default_consignee_phone' => 'string',
        'default_consignee_email' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'linnworks_unique_identifier' => null,
        'email' => null,
        'account_name' => null,
        'vat_number' => null,
        'eori_number' => null,
        'ioss_number' => null,
        'default_weight' => 'double',
        'default_length' => 'double',
        'default_width' => 'double',
        'default_height' => 'double',
        'default_consignee_phone' => null,
        'default_consignee_email' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'linnworks_unique_identifier' => 'linnworksUniqueIdentifier',
        'email' => 'email',
        'account_name' => 'accountName',
        'vat_number' => 'vatNumber',
        'eori_number' => 'eoriNumber',
        'ioss_number' => 'iossNumber',
        'default_weight' => 'defaultWeight',
        'default_length' => 'defaultLength',
        'default_width' => 'defaultWidth',
        'default_height' => 'defaultHeight',
        'default_consignee_phone' => 'defaultConsigneePhone',
        'default_consignee_email' => 'defaultConsigneeEmail'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'linnworks_unique_identifier' => 'setLinnworksUniqueIdentifier',
        'email' => 'setEmail',
        'account_name' => 'setAccountName',
        'vat_number' => 'setVatNumber',
        'eori_number' => 'setEoriNumber',
        'ioss_number' => 'setIossNumber',
        'default_weight' => 'setDefaultWeight',
        'default_length' => 'setDefaultLength',
        'default_width' => 'setDefaultWidth',
        'default_height' => 'setDefaultHeight',
        'default_consignee_phone' => 'setDefaultConsigneePhone',
        'default_consignee_email' => 'setDefaultConsigneeEmail'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'linnworks_unique_identifier' => 'getLinnworksUniqueIdentifier',
        'email' => 'getEmail',
        'account_name' => 'getAccountName',
        'vat_number' => 'getVatNumber',
        'eori_number' => 'getEoriNumber',
        'ioss_number' => 'getIossNumber',
        'default_weight' => 'getDefaultWeight',
        'default_length' => 'getDefaultLength',
        'default_width' => 'getDefaultWidth',
        'default_height' => 'getDefaultHeight',
        'default_consignee_phone' => 'getDefaultConsigneePhone',
        'default_consignee_email' => 'getDefaultConsigneeEmail'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['linnworks_unique_identifier'] = isset($data['linnworks_unique_identifier']) ? $data['linnworks_unique_identifier'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['account_name'] = isset($data['account_name']) ? $data['account_name'] : null;
        $this->container['vat_number'] = isset($data['vat_number']) ? $data['vat_number'] : null;
        $this->container['eori_number'] = isset($data['eori_number']) ? $data['eori_number'] : null;
        $this->container['ioss_number'] = isset($data['ioss_number']) ? $data['ioss_number'] : null;
        $this->container['default_weight'] = isset($data['default_weight']) ? $data['default_weight'] : null;
        $this->container['default_length'] = isset($data['default_length']) ? $data['default_length'] : null;
        $this->container['default_width'] = isset($data['default_width']) ? $data['default_width'] : null;
        $this->container['default_height'] = isset($data['default_height']) ? $data['default_height'] : null;
        $this->container['default_consignee_phone'] = isset($data['default_consignee_phone']) ? $data['default_consignee_phone'] : null;
        $this->container['default_consignee_email'] = isset($data['default_consignee_email']) ? $data['default_consignee_email'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets linnworks_unique_identifier
     *
     * @return string
     */
    public function getLinnworksUniqueIdentifier()
    {
        return $this->container['linnworks_unique_identifier'];
    }

    /**
     * Sets linnworks_unique_identifier
     *
     * @param string $linnworks_unique_identifier linnworks_unique_identifier
     *
     * @return $this
     */
    public function setLinnworksUniqueIdentifier($linnworks_unique_identifier)
    {
        $this->container['linnworks_unique_identifier'] = $linnworks_unique_identifier;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string $email email
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets account_name
     *
     * @return string
     */
    public function getAccountName()
    {
        return $this->container['account_name'];
    }

    /**
     * Sets account_name
     *
     * @param string $account_name account_name
     *
     * @return $this
     */
    public function setAccountName($account_name)
    {
        $this->container['account_name'] = $account_name;

        return $this;
    }

    /**
     * Gets vat_number
     *
     * @return string
     */
    public function getVatNumber()
    {
        return $this->container['vat_number'];
    }

    /**
     * Sets vat_number
     *
     * @param string $vat_number vat_number
     *
     * @return $this
     */
    public function setVatNumber($vat_number)
    {
        $this->container['vat_number'] = $vat_number;

        return $this;
    }

    /**
     * Gets eori_number
     *
     * @return string
     */
    public function getEoriNumber()
    {
        return $this->container['eori_number'];
    }

    /**
     * Sets eori_number
     *
     * @param string $eori_number eori_number
     *
     * @return $this
     */
    public function setEoriNumber($eori_number)
    {
        $this->container['eori_number'] = $eori_number;

        return $this;
    }

    /**
     * Gets ioss_number
     *
     * @return string
     */
    public function getIossNumber()
    {
        return $this->container['ioss_number'];
    }

    /**
     * Sets ioss_number
     *
     * @param string $ioss_number ioss_number
     *
     * @return $this
     */
    public function setIossNumber($ioss_number)
    {
        $this->container['ioss_number'] = $ioss_number;

        return $this;
    }

    /**
     * Gets default_weight
     *
     * @return double
     */
    public function getDefaultWeight()
    {
        return $this->container['default_weight'];
    }

    /**
     * Sets default_weight
     *
     * @param double $default_weight default_weight
     *
     * @return $this
     */
    public function setDefaultWeight($default_weight)
    {
        $this->container['default_weight'] = $default_weight;

        return $this;
    }

    /**
     * Gets default_length
     *
     * @return double
     */
    public function getDefaultLength()
    {
        return $this->container['default_length'];
    }

    /**
     * Sets default_length
     *
     * @param double $default_length default_length
     *
     * @return $this
     */
    public function setDefaultLength($default_length)
    {
        $this->container['default_length'] = $default_length;

        return $this;
    }

    /**
     * Gets default_width
     *
     * @return double
     */
    public function getDefaultWidth()
    {
        return $this->container['default_width'];
    }

    /**
     * Sets default_width
     *
     * @param double $default_width default_width
     *
     * @return $this
     */
    public function setDefaultWidth($default_width)
    {
        $this->container['default_width'] = $default_width;

        return $this;
    }

    /**
     * Gets default_height
     *
     * @return double
     */
    public function getDefaultHeight()
    {
        return $this->container['default_height'];
    }

    /**
     * Sets default_height
     *
     * @param double $default_height default_height
     *
     * @return $this
     */
    public function setDefaultHeight($default_height)
    {
        $this->container['default_height'] = $default_height;

        return $this;
    }

    /**
     * Gets default_consignee_phone
     *
     * @return string
     */
    public function getDefaultConsigneePhone()
    {
        return $this->container['default_consignee_phone'];
    }

    /**
     * Sets default_consignee_phone
     *
     * @param string $default_consignee_phone default_consignee_phone
     *
     * @return $this
     */
    public function setDefaultConsigneePhone($default_consignee_phone)
    {
        $this->container['default_consignee_phone'] = $default_consignee_phone;

        return $this;
    }

    /**
     * Gets default_consignee_email
     *
     * @return string
     */
    public function getDefaultConsigneeEmail()
    {
        return $this->container['default_consignee_email'];
    }

    /**
     * Sets default_consignee_email
     *
     * @param string $default_consignee_email default_consignee_email
     *
     * @return $this
     */
    public function setDefaultConsigneeEmail($default_consignee_email)
    {
        $this->container['default_consignee_email'] = $default_consignee_email;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
